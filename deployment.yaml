apiVersion: apps/v1 # specifies the API version of the Kubernetes resource
kind: Deployment # specifies the kind of resource
metadata:
  name: second-app-deployment # name of the deployment
  labels:
    group: groupA # label for the deployment, can be used to group multiple deployments together,
    # and then refrence all of them at once using the label.(e.g. kubectl delete deployment -l group=groupA)
spec: # specification of the deployment
  replicas: 1 # number of replicas to run
  selector: # This is crucial for the deployment object to know which pods to manage
    matchLabels: # labels to match the pods(should be exactly the same as the labels in the pod template)
      app: second-app 
      tier: backend 
#   matchExpressions:
#     - {key: app, operator: In, values: [backend1, backend2]}
  template: # template for the *pod*
    metadata:
      labels: # You can have multiple labels for the pod.
        app: second-app # label for the pod
        tier: backend # another label for the pod(optional)
    spec: # specification for the individual pod to be created.
      containers: # list of *containers* to run in the *pod*
        - name: second-node # name of the container
          image: ozalboher/kube-first-app:latest # image to use for the container(i added "latest" tag, so if changes are made to the image it will always pull the latest image)
          imagePullPolicy: Always # always pull the image from the registry
          livenessProbe:
            httpGet:
              path: / # on which path to check for liveness
              port: 8080 # on which port to check for liveness
            periodSeconds: 5 # how often to check for liveness
            initialDelaySeconds: 5 # how long to wait before checking for liveness

        